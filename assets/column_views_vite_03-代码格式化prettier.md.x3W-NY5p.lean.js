import{_ as i,c as a,a2 as n,o as e}from"./chunks/framework.Ha0aP7Un.js";const t="/vitepress-notes/assets/image-20240119100934473.DntfaiBO.png",l="/vitepress-notes/assets/image-20240119103213962.BjZocJwg.png",p="/vitepress-notes/assets/image-20240119103510327.DkcYwXrk.png",r="/vitepress-notes/assets/image-20240119103546522.Bpp3093-.png",b=JSON.parse('{"title":"03-代码格式化(prettier)","description":"","frontmatter":{},"headers":[],"relativePath":"column/views/vite/03-代码格式化prettier.md","filePath":"column/views/vite/03-代码格式化prettier.md"}'),h={name:"column/views/vite/03-代码格式化prettier.md"};function k(o,s,d,u,E,g){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_03-代码格式化-prettier" tabindex="-1">03-代码格式化(prettier) <a class="header-anchor" href="#_03-代码格式化-prettier" aria-label="Permalink to &quot;03-代码格式化(prettier)&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>可以在你保存代码的时候，统一风格，或者去除多余空格。等等</p></div><p>例如我喜欢的几个点</p><ul><li>把所有的字符串变量都作为单引号 &#39;&#39;</li></ul><p>因为在变量里面如果有标签赋值的话，可以避免</p><p><strong>正例：</strong> ✔</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;foo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> testDiv </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>反例：</strong> ❌</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;foo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> testDiv </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;div id=&#39;test&#39;&gt;&lt;/div&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>给所有的后缀补上 ;分号</li></ul><h2 id="一、下载插件" tabindex="-1">一、下载插件 <a class="header-anchor" href="#一、下载插件" aria-label="Permalink to &quot;一、下载插件&quot;">​</a></h2><p>在vscode的插件列表搜索</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Prettier</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><img src="`+t+`" alt="image-20240119100934473"><p>点击下载安装，然后重启编辑器</p><h3 id="创建文件-在根目录下" tabindex="-1">创建文件，在根目录下 <a class="header-anchor" href="#创建文件-在根目录下" aria-label="Permalink to &quot;创建文件，在根目录下&quot;">​</a></h3><p>就是跟你的vite.config.js同级别</p><p>文件名</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.prettierrc.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>复制粘贴到里面</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;printWidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tabWidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;useTabs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;semi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;singleQuote&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;quoteProps&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;as-needed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;jsxSingleQuote&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;trailingComma&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;es5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;bracketSpacing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;jsxBracketSameLine&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;arrowParens&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;always&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;requirePragma&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;insertPragma&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;vueIndentScriptAndStyle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;proseWrap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;preserve&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="二、保存时自动格式化代码规范" tabindex="-1">二、保存时自动格式化代码规范 <a class="header-anchor" href="#二、保存时自动格式化代码规范" aria-label="Permalink to &quot;二、保存时自动格式化代码规范&quot;">​</a></h2><p>打开vscode，进入设置，搜索 format on save。勾选</p><img src="`+l+'" alt="image-20240119103213962" style="zoom:80%;"><p>使用prettier格式化代码</p><img src="'+p+'" alt="image-20240119103510327" style="zoom:80%;"><img src="'+r+`" alt="image-20240119103546522" style="zoom:80%;"><blockquote><p><em><code>到这里就大功告成了</code></em></p></blockquote><h2 id="三、个别属性翻译" tabindex="-1">三、个别属性翻译 <a class="header-anchor" href="#三、个别属性翻译" aria-label="Permalink to &quot;三、个别属性翻译&quot;">​</a></h2><ul><li><strong>printWidth</strong></li></ul><p>在.editorconfig文件中设置max_line_length将配置Prettier的打印宽度，除非被覆盖。</p><p>(如果在设置Markdown格式时不希望换行，可以设置散文换行选项禁用它。)</p><ul><li><strong>tabWidth</strong></li></ul><p>在.editorconfig文件中设置indent_size或tab_width将配置pretier的制表符宽度，除非被覆盖。</p><ul><li><strong>useTabs</strong></li></ul><p>在.editorconfig文件中设置indent_style将配置Prettier的制表符使用，除非被覆盖。</p><p>(制表符将用于缩进，但Prettier使用空格来对齐，例如在三元格式中。这种行为被称为智能标签。)</p><ul><li><strong>semi</strong></li></ul><blockquote><p>在语句末尾打印分号。</p></blockquote><p>有效的选项:</p><p>true -在每个语句的末尾添加分号。</p><p>false -仅在可能引入ASI故障的行开头添加分号。</p><ul><li><strong>singleQuote</strong></li></ul><p>使用单引号而不是双引号。</p><p>JSX引号忽略这个选项——参见JSX -single-quote。</p><p>如果引号的数量超过其他引号，较少使用的引号将用于格式化字符串-例如:“我是双引号”结果为“我是双引号”，“这个例子”是单引号”结果为“这个例子”是单引号”。</p><ul><li><strong>quoteProps</strong></li></ul><p>当对象中的属性被引用时更改。</p><p>&quot;as-needed&quot;——只在需要的地方给对象属性加上引号。</p><p>&quot;consistent&quot; -如果对象中至少有一个属性需要引号，则引用所有属性。</p><p>&quot;preserve&quot; -尊重对象属性中引号的输入使用。</p><ul><li><strong>jsxSingleQuote</strong></li></ul><p>在JSX中使用单引号而不是双引号。</p><ul><li><strong>trailingComma</strong></li></ul><p>默认值在v3.0.0中从es5更改为all</p><p>在多行逗号分隔的语法结构中，尽可能打印尾随逗号。(例如，单行数组后面永远不会有逗号。)</p><p>有效的选项:</p><p>&quot;all&quot; -在任何可能的地方后面加逗号(包括函数参数和调用)。要运行以这种方式格式化的JavaScript代码，需要一个支持ES2017 (Node.js 8+或现代浏览器)或底层编译的引擎。这也支持TypeScript类型参数中的尾随逗号(自2018年1月发布的TypeScript 2.7起支持)。</p><p>&quot;es5&quot; -后面的逗号在es5中是有效的(对象，数组等)。TypeScript和Flow中类型参数后面的逗号。</p><p>&quot;none&quot; -没有尾随逗号。</p><ul><li><strong>bracketSpacing</strong></li></ul><p>打印对象字面量中括号之间的空格。</p><p>有效的选项:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>true -例如:{ foo: bar }。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>false—例如:{foo: bar}。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><strong>jsxBracketSameLine</strong></li></ul><p>把&gt;多行JSX元素在最后一行的末尾，而不是单独在下一行(不适用于自关闭元素)。</p><p><code>true</code> - Example:</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  className</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prettier-class&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prettier-id&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{this.handleClick}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Click Here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>false</code> - Example:</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  className</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prettier-class&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prettier-id&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{this.handleClick}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Click Here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><strong>arrowParens</strong></li></ul><p>首次在v1.9.0中可用，默认值在v2.0.0中从avoid更改为always</p><p>在唯一的箭头函数参数周围包含圆括号。</p><p><code>&quot;always&quot;</code> - 总是包括父节点. Example: <code>(x) =&gt; x</code></p><p><code>&quot;avoid&quot;</code> - 尽可能省略父节点. Example: <code>x =&gt; x</code></p><ul><li><strong>requirePragma</strong></li></ul><p>Prettier可以将自己限制为只格式化在文件顶部包含特殊注释(称为pragma)的文件。这在逐步将大型未格式化的代码库转换为Prettier时非常有用。</p><p>当提供——require-pragma时，带有以下第一个注释的文件将被格式化:</p><ul><li><strong>insertPragma</strong></li><li><strong>vueIndentScriptAndStyle</strong></li><li><strong>proseWrap</strong></li></ul><p>可以翻看文档，文档内都是英文的，需要自己翻译</p><p><a href="https://www.prettier.cn/docs/options.html" target="_blank" rel="noreferrer">Prettier中文网</a></p><h2 id="四、更多的编程开发规范" tabindex="-1">四、更多的编程开发规范 <a class="header-anchor" href="#四、更多的编程开发规范" aria-label="Permalink to &quot;四、更多的编程开发规范&quot;">​</a></h2><p><a href="https://developer.aliyun.com/article/850913#slide-0" target="_blank" rel="noreferrer">阿里代码规范传送门</a></p>`,83)]))}const m=i(h,[["render",k]]);export{b as __pageData,m as default};
